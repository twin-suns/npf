/*
	NPF IMAGES READJUSTMENT | @glenthemes
	v2.0 [last updated: 2021-03-04] 11:56AM GMT+8
*/

$(document).ready(function(){
    var enculer = getComputedStyle(document.documentElement)
                  .getPropertyValue("--NPF-Bottom-Gap-From-Captions");
                  
    // wrap each row
    $(".npf_row").each(function(){
        $(this).wrap("<div class='npf_row_set'>");
        
    });
    
    // make each row (and its items) even
    $(".tmblr-full").each(function(){
        if($(this).closest(".npf_col").length){
            $(this).unwrap()
        }
        
        var imgheight = $(this).height();
        if(imgheight < $(this).parents(".npf_row").height()){
            $(this).parents(".npf_row").height(imgheight)
        }
        
        if(!$(this).closest(".npf_row").length){
            $(this).wrap("<div class='npf_row_parent'>");
        };
    });
    
    $(".npf_row_parent").each(function(){
        if($(this).siblings(".npf_row_parent").length){
            $(this).addClass("bROTHER");
        }
        
        if(!$(this).closest(".npf_row_set").length){
            $(this).wrap("<div class='npf_row_set'>");
        }
        
        if(!$(this).siblings().length){
            if($(this).closest(".npf_row_set").length){
                $(this).unwrap();
            }
        }
        
        if(!$(this).hasClass("bROTHER")){
            $(this).wrap("<div class='npf_inst'>");
        }
    });
    
    // wrapping script courtesy of Nick Craver, my god and savior
    // stackoverflow.com/a/3329249/8144506
    var divs = $(".bROTHER");
    for(var i=0; i<divs.length;) {
       i += divs.eq(i).nextUntil(':not(.bROTHER)').andSelf().wrapAll('<div class="npf_inst">').length;
    }
        
    
    $(".npf_row_set").each(function(){
        if(!$(this).closest(".npf_inst").length){
            if(!$(this).parent("blockquote").length){
                $(this).parent().children(".npf_row_set").wrapAll("<div class='npf_inst'>");
            }
        };
    });
    
    // init lightbox per image click
    $(".tmblr-full").click(function(){
        var img = $(this).find("img"),
            imgsrc = img.attr("src");
        
        Tumblr.Lightbox.init([{
            low_res:imgsrc,
            high_res:imgsrc
        }]);
        
        $("body").toggleClass("tumblr_lightbox_active");
        return false;
    });
    
    // wrap npf sets in a container
    $("blockquote").each(function(){
        $(this).children(".npf_row_set").wrapAll("<div class='npf_inst'>");
    });
    
    // target npf text posts only
    $("*").filter('[post-type="text"]').addClass('textpost');
    
    // wrap npf in container even if it isn't inside a blockquote
    $(".textpost").each(function(){
        if($(this).find("blockquote").next(".npf_row_set").length){
            $(this).find("blockquote").siblings(".npf_row_set").wrapAll('<div class="npf_inst">')
        }
    });
	
	// turn npf images HD
    $(".npf_inst img").each(function(){
        var getHD = $(this).parent(".post_media_photo_anchor").attr("data-big-photo");
        $(this).attr("src",getHD);
        
        var newsrc = $(this).attr("src").replace("_" + 500 + ".", "_" + 1280 + ".");
        $(this).attr("src",newsrc);
    });
    
    //remove empty <br> generated by mobile uploads
    $(".npf_inst").each(function(){
        var checkpara = $(this).next("p");
        
        checkpara.contents().filter(function(){
            return this.nodeType === 3;
        }).wrap('<span/>');
        
        if(checkpara.length){
            if(checkpara.children("br").length){
                if(!checkpara.children("br").eq(0).siblings().length){
                    checkpara.remove();
                }
            }
        }
    });
    
    // find & remove empty <p>s generated before npf photosets
    // do nothing if no empty <p>s have been generated
    $(".textpost p").each(function(){
        if($(this).text().length == 0){
            if($(this).children().length == 0){
                if($(this).prev().length == 0){
                    if($(this).next(".npf_inst")){
                        $(this).remove()
                    }
                }
            }
        }
    });
    
    $(".textpost").each(function(){
        if($(this).find(".npf_inst").length){
            $(this).addClass("has-npf");
        }
    });
    
    // make the row height the same as shortest image in the row
    $(".tmblr-full img").each(function(){
        $(this).attr("genheight",$(this).height());
    });
    
    $(".npf_row_set").each(function(){
        var que = $(this).find(".tmblr-full img").map(function(){
            return $(this).attr("genheight");
        }).get();
    
        var shortest = Math.min.apply(Math,que);
        $(this).find(".npf_row").height(shortest);
        
        $(this).find(".tmblr-full").height(shortest)
    });
    
    
    $(".textpost p").each(function(){
        $(this).contents().filter(function(){
            return this.nodeType === 3;
        }).wrap('<span/>');
    });
    
    /*------------ RELOCATE NPF TO TOP OF POST ------------*/
    
    // make npf photos look like a photo post
    // move npf photoset above the @username and caption
            
    // only relocate if there is 1 line of caption
    // and that it's meant to be after the photo
    
    /*------------ LEGACY ------------*/
    $(".has-npf").each(function(){
        if($(this).find(".npf_inst").length === 1){
            var npf = $(this).find(".npf_inst");
            
            if(!npf.prev().length){
                if(npf.closest("blockquote").length){
                    if(npf.parent().prev("p")){
                        if(npf.parent().prev().find("a.tumblr_blog").length){
                            
                            npf.insertBefore(npf.parent().prev())
                        }
                    }
                }
            }
        }
    });//has-npf each
    
    // remove empty blockquotes hanging at the end
    $(".has-npf blockquote").each(function(){
        if($(this).prev().length){
            if($(this).prev("p")){
                if($(this).prev("p").find("a.tumblr_blog").length){
                    if($(this).index() == $(this).siblings().length-1){
                        if(!$.trim($(this).html()).length){
                            $(this).remove();
                        }
                    }
                }
            }
        }
    });
    
    // if npf post does not have caption or reblogs,
    // add source to post
    $(".has-npf").each(function(){
        if($(this).find(".npf_inst").length === 1){
            var npf = $(this).find(".npf_inst");
            
            if(npf.next().is("p")){
                if(!npf.next().next().is("blockquote")){
                    if(npf.next().find("a.tumblr_blog").length){
                        var opurl = npf.next().find("a.tumblr_blog")
                                   .attr("href");
                        var optxt = npf.next().find("a.tumblr_blog")
                                   .text();
                        npf.next().addClass("post-src").html("(Source: <a href='" + opurl + "'>" + optxt + "</a>)")
                    }
                }
            }
        }
    });//has-npf each
    
    // doublecheck if any photosets are still stuck inside a blockquote
    $(".has-npf").each(function(){
        if($(this).find(".npf_inst").length === 1){
            var npf = $(this).find(".npf_inst");
            if(!npf.prev().length){
                if(npf.closest("blockquote").length){
                    if(npf.parent().prev("p")){
                        if(npf.parent().prev().find("a.tumblr_blog").length){
                            npf.insertBefore(npf.parent().prev())
                        }
                    }
                }
            }
        }
    });
    
    // relocate post source to bottom of all reblogs
    $(".post-src").each(function(){
        if(!$(this).prev().length){
            if($(this).closest("blockquote").length){
                if($(this).next()){
                    $(this).insertBefore($(this).parent());
                    if($(this).next().is("blockquote")){
                        $(this).insertAfter($(this).nextAll("blockquote"))
                    }
                }
            }
        }
    });
    
    // remove empty blockquotes hanging at the end (take2)
    $(".has-npf blockquote").each(function(){
        if(!$.trim($(this).html()).length){
            $(this).remove();
        }
    });
    
    // if for some reason a post source wasn't generated,
    // try adding it again
    $(".has-npf p a.tumblr_blog").each(function(){
        if(!$(this).parent().next().is("blockquote")){
            var opurl = $(this).attr("href");
            var optxt = $(this).text();
            $(this).parent().addClass("post-src").html("(Source: <a href='" + opurl + "'>" + optxt + "</a>)")
        }
    });
    
    /*------------ MODERN ------------*/
    $(".npf_inst").each(function(){
        
        
        if($(this).next("p").find("a.tumblr_blog").length == 0){
            if(!$(this).prev().length){
                if(!$(this).parent().is("blockquote")){
                    if($(this).next().length){
                        if(!$(this).parent().parent().is(".textpost")){
                        if(!$(this).parent().is(".textpost")){
                            $(this).insertBefore($(this).parent().parent());
                            $(this).css("margin-bottom",enculer);
                        }
                        }
                        
                    } else {
                        $(this).css("margin-top",enculer);
                    }
                }
                
            }
        }
        
    });
	
	$(".has-npf").each(function(){
		var npf_inst = $(this).find(".npf_inst");
		if(npf_inst.length === 1){
			/*
			if(npf_inst.next().is(".comment_container")){
				npf_inst.css("margin-bottom","1em");
			}
			*/
			
			if(npf_inst.prev().length == 0){
				npf_inst.addClass("boooob");
			}
			
			if(npf_inst.siblings().length == 0){
				npf_inst.removeClass("boooob");
			}
		}
	});
	
	// if the thing below npf already has a gap,
	// don't apply an additional gap
	$(".boooob").each(function(){
		var nextThing = $(this).next();
		var getmarge = parseFloat(nextThing.css("margin-top"));
		var getpad = parseFloat(nextThing.css("padding-top"));
		
		nextThing.attr("nxtmargin",getmarge);
		nextThing.attr("nxtpad",getpad);
		
		if(nextThing.attr("nxtmargin") > 0 || nextThing.attr("nxtpad") > 0){
			$(this).css("margin-bottom","")
		}
		
		if(nextThing.attr("nxtmargin") == 0 && nextThing.attr("nxtpad") == 0){
			$(this).css("margin-bottom",enculer)
		}
	});
    
    // fallback for if npf heights are returning zero
    $(".npf_row").each(function(){
        if($(this).height() == "0"){
            location.reload();
        }
    });
});//end ready
